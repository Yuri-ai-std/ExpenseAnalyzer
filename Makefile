# -------------------------------
# ExpenseAnalyzer_Restore - Makefile
# -------------------------------

# –ë—ã—Å—Ç—Ä–∞—è —á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ (–ª–æ–∫–∞–ª—å–Ω—ã–µ –∫—ç—à–∏)
clean:
	@echo "üßπ Cleaning project cache..."
	@bash tools/cleanup_vscode.sh --yes

# –ì–ª—É–±–æ–∫–∞—è —á–∏—Å—Ç–∫–∞ (VS Code, Streamlit, pip –∫—ç—à–∏)
deep-clean:
	@echo "üßπ Cleaning project + user caches..."
	@bash tools/cleanup_vscode.sh --deep --yes

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è
dry-run:
	@echo "üîç Dry run - no files will be deleted"
	@bash tools/cleanup_vscode.sh --dry-run

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ (isort + black)
format:
	@echo "üé® Sorting imports with isort and formatting code with black..."
	@isort .
	@black .

# ---- —É—Ç–∏–ª–∏—Ç—ã ----
.PHONY: clean deep-clean dry-run format format-check format-app lint test all

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
format-check:
	@echo "üîç Checking formatting (isort + black --check)..."
	@isort . --check-only --profile black
	@black . --check

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–¥–∏–Ω —Ñ–∞–π–ª (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: make format-app f=app.py)
format-app:
	@echo "‚ú® Formatting file: $(f)"
	@isort $(f) --profile black
	@black $(f)

# –õ–∏–Ω—Ç–µ—Ä (–µ—Å–ª–∏ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å flake8 ‚Äî —É–¥–æ–±–Ω–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)
lint:
	@echo "üîé Running flake8..."
	@flake8

# –ü—Ä–∏–º–µ—Ä: –µ–¥–∏–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ ¬´–∏—Å–ø—Ä–∞–≤—å –≤—Å—ë –≤ app.py –∏ –∑–∞–ø—É—Å—Ç–∏ —Ç–µ—Å—Ç—ã¬ª
fix-app:
	@$(MAKE) format-app f=app.py
	@$(MAKE) test

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤
test:
	@echo "üß™ Running pytest..."
	@pytest -q

# –ü–æ–ª–Ω—ã–π —Ä–∞–±–æ—á–∏–π —Ü–∏–∫–ª
all: clean format test

.PHONY: unused unused-fast

unused:
	@echo "üîé Running vulture (unused code)‚Ä¶"
	@bash tools.sh unused

unused-fast:
	@echo "üîé Running ripgrep heuristic (unused code)‚Ä¶"
	@bash tools.sh unused-fast

.PHONY: audit audit-clean

# === 1) –ü–æ–ª–Ω—ã–π –∞—É–¥–∏—Ç –¥–µ—Ä–µ–≤–∞ + –æ—Ç—á—ë—Ç ===
audit:
	@echo "üîé Auditing project tree and large files..."
	@bash -c '\
	  { \
	    echo "=== TREE (trimmed) ==="; \
	    tree -ah --du -I ".git|.venv|node_modules|__pycache__|.pytest_cache|dist|build"; \
	    echo; echo "=== TOP DIRS ==="; \
	    du -hd1 . | sort -hr | head -n 20; \
	    echo; echo "=== TOP FILES ==="; \
	    find . -type f -not -path "*/.git/*" -not -path "*/.venv/*" -not -path "*/__pycache__/*" -exec du -h {} + | sort -hr | head -n 50; \
	    echo; echo "=== DB/CSV/JSON ==="; \
	    echo "-- .db"; find . -type f -name "*.db" | sort; \
	    echo "-- .csv"; find . -type f -name "*.csv" | sort; \
	    echo "-- .json"; find . -type f -name "*.json" | sort; \
	    echo; echo "=== >100MB FILES ==="; \
	    find . -type f -size +100M -not -path "*/.git/*" -not -path "*/.venv/*" -print0 | xargs -0 ls -lh | sort -k5 -hr; \
	  } > audit_report.txt'
	@echo "üìÑ Audit complete ‚Üí see audit_report.txt"
	@open -a TextEdit audit_report.txt || true

# === 2) –ê—É–¥–∏—Ç + –∞–≤—Ç–æ-–∞—Ä—Ö–∏–≤ CSV/JSON –∏–∑ data/ ===
audit-clean: audit
	@echo "üóÑÔ∏è  Archiving legacy CSV/JSON from data/ ‚Üí data/_archive_legacy/..."
	@mkdir -p data/_archive_legacy
	@find data -maxdepth 1 -type f \( -name "*.csv" -o -name "*.json" \) -print -exec mv {} data/_archive_legacy/ \;
	@echo "‚úÖ Archive complete. All CSV/JSON moved to data/_archive_legacy/"
	@echo "üì¶ Remaining files in data/:"
	@find data -maxdepth 1 -type f -exec ls -lh {} \; | sort -k5 -hr || true
	@open -a TextEdit audit_report.txt || true

# === 3) –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —á–∏—Å—Ç–∫–∞: –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—É—é –ë–î –∏ –ª–∏–º–∏—Ç—ã ===
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   make audit-clean-extended ACTIVE_DB=data/default_expenses.db ACTIVE_LIMITS=data/default_budget_limits.json
#
# –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –∑–∞–¥–∞–Ω—ã ‚Äî –±–µ—Ä—ë–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
.PHONY: audit-clean-extended
ACTIVE_DB ?= data/default_expenses.db
ACTIVE_LIMITS ?= data/default_budget_limits.json

audit-clean-extended: audit
	@echo "üßπ Extended clean: keep only active DB/LIMITS, archive the rest..."
	@mkdir -p data/_archive_legacy exports
	@echo "‚Üí Active DB:      $(ACTIVE_DB)"
	@echo "‚Üí Active LIMITS:  $(ACTIVE_LIMITS)"
	@echo "‚Üí Archiving other *.db / *.json / *.csv from data/ (except active pair)..."

	# –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Å–µ .db –∫—Ä–æ–º–µ –∞–∫—Ç–∏–≤–Ω–æ–π
	@find data -maxdepth 1 -type f -name "*.db" ! -path "$(ACTIVE_DB)" -print -exec mv {} data/_archive_legacy/ \;

	# –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Å–µ .json –∫—Ä–æ–º–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ limits
	@find data -maxdepth 1 -type f -name "*.json" ! -path "$(ACTIVE_LIMITS)" -print -exec mv {} data/_archive_legacy/ \;

	# –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Å–µ csv –∏–∑ data/
	@find data -maxdepth 1 -type f -name "*.csv" -print -exec mv {} data/_archive_legacy/ \;

	# –≠–∫—Å–ø–æ—Ä—Ç—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–∞–ø–∫—É
	@find . -maxdepth 1 -type f -name "export*.csv" -print -exec mv {} exports/ \;

	@echo "‚úÖ Extended archive complete."
	@echo "üì¶ Remaining files in data/:"
	@find data -maxdepth 1 -type f -exec ls -lh {} \; | sort -k5 -hr || true
	@open -a TextEdit audit_report.txt || true

# === 4) –ì–ª—É–±–æ–∫–∞—è —É–±–æ—Ä–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤/–∫—ç—à–µ–π ===
.PHONY: deep-clean
deep-clean:
	@echo "üßΩ Deep clean: pyc/__pycache__/pytest_cache/build/dist..."
	@find . -name "__pycache__" -type d -prune -exec rm -rf {} + || true
	@find . -name "*.pyc" -delete || true
	@rm -rf .pytest_cache dist build || true
	@echo "‚úÖ Deep clean done."